<Application x:Class="WpfRaziLedgerApp.App"
             xmlns:Syncfusion="http://schemas.syncfusion.com/wpf"  
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:WpfRaziLedgerApp"
             xmlns:Xceed="http://schemas.xceed.com/wpf/xaml/toolkit"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <FontFamily x:Key="NewFont">pack://application:,,,/Fonts/#Yekan Bakh EN 02</FontFamily>
        <FontFamily x:Key="NewFont2">pack://application:,,,/Fonts/#Yekan Bakh EN 01 Light</FontFamily>
        <FontFamily x:Key="IranSans">pack://application:,,,/Fonts/#FontsFree-Net-ir_sans</FontFamily>
        <local:ColorToBrushConverter x:Key="ColorToBrushConverter" />
        <Style TargetType="{x:Type Xceed:MessageBox}">
            <!--<Setter Property="ButtonRegionBackground">
    <Setter.Value>
        <SolidColorBrush Color="#FF849CA6"/>
    </Setter.Value>
</Setter>-->
            <Setter Property="FlowDirection" Value="RightToLeft" />
            <Setter Property="YesButtonContent" Value="بله" />
            <Setter Property="NoButtonContent" Value="خیر" />
            <Setter Property="OkButtonContent" Value="متوجه شدم !" />
            <Setter Property="CancelButtonContent" Value="لغو" />
            <Setter Property="WindowBackground" Value="#FF63A7C3" ></Setter>
        </Style>
        <Style x:Key="CustomButtonStyle" TargetType="Button">
            <!--<Setter Property="Foreground" Value="#707db2"/>
       <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
       <Setter Property="VerticalContentAlignment" Value="Center"/>
       <Setter Property="BorderBrush" Value="Transparent"/>
       <Setter Property="Margin" Value="5 0 0 0"/>
       <Setter Property="Height" Value="45"/>
       <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
       <Setter Property="Tag" Value="#6673b7"/>
       <Setter Property="Background" Value="Transparent"/>
       <Setter Property="Template">
           <Setter.Value>
               <ControlTemplate TargetType="Button">
                   <Border Background="{TemplateBinding Background}" BorderThickness="4 0 0 0" BorderBrush="Transparent">
                       <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                   </Border>
               </ControlTemplate>
           </Setter.Value>
       </Setter>-->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">

                    <!--<Setter Property="Foreground" Value="#bccaf1"/>-->
                    <!--<Setter Property="Background">
                   <Setter.Value>
                       <LinearGradientBrush StartPoint="0, 0.5" EndPoint="1, 0.5">
                           <GradientStop Color="#31407b" Offset="0"/>
                           <GradientStop Color="#495385" Offset="3"/>
                       </LinearGradientBrush>
                   </Setter.Value>
               </Setter>-->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{Binding RelativeSource={RelativeSource Self},
                                   UpdateSourceTrigger=PropertyChanged, 
                                   Converter={StaticResource ColorToBrushConverter}
                               ,ConverterParameter=0

                          }" BorderThickness="1 1 1 1" Margin="1 0" BorderBrush="DarkSlateGray">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>


                <!--<Trigger Property="IsPressed" Value="True">
               <Trigger.EnterActions>
                   <BeginStoryboard>
                       <Storyboard>
                           <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="CadetBlue"/>
                       </Storyboard>
                   </BeginStoryboard>
               </Trigger.EnterActions>

           </Trigger>-->
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{Binding RelativeSource={RelativeSource Self},
                UpdateSourceTrigger=PropertyChanged, 
                Converter={StaticResource ColorToBrushConverter}
            ,ConverterParameter=1

       }" BorderThickness="1 1 1 1" Margin="1 0" BorderBrush="DarkSlateGray">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>


            </Style.Triggers>
        </Style>
        <Style x:Key="CustomButtonStyle2" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="10" Background="{TemplateBinding Background}" BorderThickness="1 1 1 1" BorderBrush="DarkGray">
                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border CornerRadius="10" Background="{Binding RelativeSource={RelativeSource Self},
                            UpdateSourceTrigger=PropertyChanged, 
                            Converter={StaticResource ColorToBrushConverter}
                        ,ConverterParameter=0

                   }" BorderThickness="1 1 1 1" Margin="1 0" BorderBrush="DarkSlateGray">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>

                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border CornerRadius="10" Background="{Binding RelativeSource={RelativeSource Self},
         UpdateSourceTrigger=PropertyChanged, 
         Converter={StaticResource ColorToBrushConverter}
     ,ConverterParameter=1

}" BorderThickness="1 1 1 1" Margin="1 0" BorderBrush="DarkSlateGray">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>


            </Style.Triggers>
        </Style>
        <Style x:Key="CheckButtonStyle" TargetType="Button">
            <Style.Triggers>
                <Trigger Property="IsPressed" Value="False">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{Binding RelativeSource={RelativeSource Self},
         UpdateSourceTrigger=PropertyChanged, 
         Converter={StaticResource ColorToBrushConverter}
     ,ConverterParameter=change2

}" BorderThickness="1 1 1 1" Margin="1 0" BorderBrush="DarkSlateGray">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{Binding RelativeSource={RelativeSource Self},
         UpdateSourceTrigger=PropertyChanged, 
         Converter={StaticResource ColorToBrushConverter}
     ,ConverterParameter=0

}" BorderThickness="1 1 1 1" Margin="1 0" BorderBrush="DarkSlateGray">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{Binding RelativeSource={RelativeSource Self},
         UpdateSourceTrigger=PropertyChanged, 
         Converter={StaticResource ColorToBrushConverter}
     ,ConverterParameter=change

}" BorderThickness="1 1 1 1" Margin="1 0" BorderBrush="DarkSlateGray">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>

            </Style.Triggers>
        </Style>
        <ControlTemplate x:Key="ValidationToolTipTemplate">
            <Grid x:Name="Root"
  Margin="5,0"
  Opacity="0"
  RenderTransformOrigin="0,0">
                <Grid.RenderTransform>
                    <TranslateTransform x:Name="xForm" X="-25" />
                </Grid.RenderTransform>
                <VisualStateManager.VisualStateGroups>

                    <VisualStateGroup x:Name="OpenStates">

                        <VisualStateGroup.Transitions>

                            <VisualTransition GeneratedDuration="0" />

                            <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.2"
						             Storyboard.TargetName="xForm"
						             Storyboard.TargetProperty="X"
						             To="0">
                                        <DoubleAnimation.EasingFunction>
                                            <BackEase Amplitude=".3" EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Duration="0:0:0.2"
						Storyboard.TargetName="Root"
						Storyboard.TargetProperty="Opacity"
						To="1" />
                                </Storyboard>
                            </VisualTransition>
                        </VisualStateGroup.Transitions>

                        <VisualState x:Name="Closed">
                            <Storyboard>
                                <DoubleAnimation Duration="0"
					             Storyboard.TargetName="Root"
					             Storyboard.TargetProperty="Opacity"
					             To="0" />
                            </Storyboard>
                        </VisualState>

                        <VisualState x:Name="Open">
                            <Storyboard>
                                <DoubleAnimation Duration="0"
					             Storyboard.TargetName="xForm"
					             Storyboard.TargetProperty="X"
					             To="0" />
                                <DoubleAnimation Duration="0"
					             Storyboard.TargetName="Root"
					             Storyboard.TargetProperty="Opacity"
					             To="1" />
                            </Storyboard>
                        </VisualState>

                    </VisualStateGroup>

                </VisualStateManager.VisualStateGroups>

                <Border Margin="4,4,-4,-4"
	    Background="#052A2E31"
	    CornerRadius="5" />
                <Border Margin="3,3,-3,-3"
	    Background="#152A2E31"
	    CornerRadius="4" />
                <Border Margin="2,2,-2,-2"
	    Background="#252A2E31"
	    CornerRadius="3" />
                <Border Margin="1,1,-1,-1"
	    Background="#352A2E31"
	    CornerRadius="2" />

                <Border Background="Orange" CornerRadius="2" />
                <Border CornerRadius="2">
                    <TextBlock MaxWidth="250"
               Margin="8,4,8,4"
               Foreground="Black"
               Text="{TemplateBinding Tag}"
               TextWrapping="Wrap"
               UseLayoutRounding="false" />
                </Border>
            </Grid>
        </ControlTemplate>
        <Style TargetType="{x:Type Syncfusion:GridCell}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="BorderThickness" Value="0,0,1,1" />
            <Setter Property="Padding" Value="0,0,0,0" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="VerticalContentAlignment" Value="Center"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Syncfusion:GridCell}">
                        <Grid SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>

                                <VisualStateGroup x:Name="IndicationStates">

                                    <VisualState x:Name="HasError">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_InValidCellBorder" 
                                                                   Storyboard.TargetProperty="Width">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0" Value="10" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" 
                                                                   Storyboard.TargetName="PART_InValidCellBorder" 
                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="NoError">
                                        <Storyboard BeginTime="0">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_InValidCellBorder" 
                                                                   Storyboard.TargetProperty="Width">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" 
                                                                   Storyboard.TargetName="PART_InValidCellBorder" 
                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                </VisualStateGroup>

                                <VisualStateGroup x:Name="BorderStates">

                                    <VisualState x:Name="NormalCell"/>

                                    <VisualState x:Name="FrozenColumnCell">
                                        <Storyboard BeginTime="0">
                                            <ThicknessAnimationUsingKeyFrames BeginTime="0"
										                              Duration="1"
										                              Storyboard.TargetName="PART_GridCellBorder"
										                              Storyboard.TargetProperty="BorderThickness">
                                                <EasingThicknessKeyFrame KeyTime="0"
											Value="0,0,1,1"/>
                                            </ThicknessAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="FooterColumnCell">
                                        <Storyboard BeginTime="0">
                                            <ThicknessAnimationUsingKeyFrames BeginTime="0"
										                              Duration="1"
										                              Storyboard.TargetName="PART_GridCellBorder"
										                              Storyboard.TargetProperty="BorderThickness">
                                                <EasingThicknessKeyFrame KeyTime="0"
											                     Value="1,0,1,1"/>
                                            </ThicknessAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="BeforeFooterColumnCell">
                                        <Storyboard BeginTime="0">
                                            <ThicknessAnimationUsingKeyFrames BeginTime="0"
										                              Duration="1"
										                              Storyboard.TargetName="PART_GridCellBorder"
										                              Storyboard.TargetProperty="BorderThickness">
                                                <EasingThicknessKeyFrame KeyTime="0"
											                     Value="0,0,0,1"/>
                                            </ThicknessAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                </VisualStateGroup>

                            </VisualStateManager.VisualStateGroups>

                            <Border Background="{Binding CellSelectionBrush}"
						    SnapsToDevicePixels="True"
						    Visibility="{Binding SelectionBorderVisibility}" />

                            <Border x:Name="PART_GridCellBorder"
						    Background="{TemplateBinding Background}"
						    BorderBrush="{TemplateBinding BorderBrush}"
						    BorderThickness="{TemplateBinding BorderThickness}"
						    SnapsToDevicePixels="True">
                                <Grid>
                                    <ContentPresenter Margin="{TemplateBinding Padding}" />
                                </Grid>
                            </Border>

                            <Border Background="Transparent"
						    BorderBrush="{Binding CurrentCellBorderBrush}"
						    BorderThickness="{Binding CurrentCellBorderThickness}"
						    IsHitTestVisible="False"
						    SnapsToDevicePixels="True"
						    Margin="0,0,1,1"
						    Visibility="{Binding CurrentCellBorderVisibility}" />

                            <Border x:Name="PART_InValidCellBorder"
						    Width="10"
						    Height="10"
						    HorizontalAlignment="Right"
						    Visibility="Collapsed"
						    VerticalAlignment="Top"
						    SnapsToDevicePixels="True">
                                <ToolTipService.ToolTip>
                                    <ToolTip Background="#FFDB000C"
								     Placement="Right"
								     PlacementRectangle="20,0,0,0"
								     Tag="{Binding ErrorMessage}"
								     Template="{StaticResource ValidationToolTipTemplate}" />
                                </ToolTipService.ToolTip>
                                <Path Data="M15.396557,23.044006C14.220558,23.044006 13.268559,23.886993 13.268559,24.927994 13.268559,25.975006 14.220558,26.817001 15.396557,26.817001 16.572557,26.817001 17.523547,25.975006 17.523547,24.927994 17.523547,23.886993 16.572557,23.044006 15.396557,23.044006z M15.467541,5.1819992C15.447552,5.1819992 15.436566,5.1829987 15.436566,5.1829987 13.118533,5.5049973 13.055545,7.3330002 13.055545,7.3330002L13.055545,9.2929993 13.626531,16.539001C13.983558,18.357002 14.243538,19.020004 14.243538,19.020004 15.275555,19.975006 16.203567,19.25 16.203567,19.25 16.976548,18.565994 17.028552,16.962997 17.028552,16.962997 17.956563,9.2929993 17.696553,7.1029968 17.696553,7.1029968 17.608571,5.2839966 15.823561,5.1849976 15.490551,5.1819992 15.481549,5.1819992 15.473553,5.1819992 15.467541,5.1819992z M15.56355,0C15.56355,0 21.710574,4.1259995 31.581613,2.8030014 31.581613,2.8030014 33.634629,26.556992 15.56355,32 15.56355,32 -0.10249132,27.548004 0.00050565118,2.9670029 0.0005058694,2.9670029 10.72555,3.6309967 15.56355,0z"
                             Fill="Red"                                     
                             SnapsToDevicePixels="True"
                             Stretch="Fill" />
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                                        <TranslateTransform  X="-9" Y="3"/>
                                    </TransformGroup>
                                </Border.RenderTransform>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="16" Margin="0 -4 0 4" Height="16" Background="Transparent">
                            <Path x:Name="ExpandPath"
      Stroke="Gray"
      StrokeThickness="1.5"
      Fill="Transparent"
      HorizontalAlignment="Center"
      VerticalAlignment="Center"
      Data="M 0 0 L 4 4 L 0 8 Z"
      RenderTransformOrigin="0.5,0.5"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="ExpandPath" Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="90"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
